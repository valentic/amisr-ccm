#!/usr/bin/env python2

#####################################################################
#
#   Relay control for USB RLY16 board
#
#   See https://www.robot-electronics.co.uk/htm/usb_rly16tech.htm
#
#   2016-07-13  Todd Valentic
#               Initial version for sbcctl
#
#   2016-11-21  Michael Kirkpatrick
#               Modified for use with USB-RLY16L latching relay
#
#   2019-04-22  Todd Valentic
#               Refactored code to use relaylib
#               Add all commands
#
#####################################################################

import argparse
import sys

def handle_general(rly16,args):
    func = getattr(rly16,args.subparser_name)
    print func()
    return 0

def handle_relay(rly16,args):
    func = getattr(rly16,args.subparser_name)
    print func(args.relay)
    return 0

def handle_setStates(rly16,args):
    func = getattr(rly16,args.subparser_name)
    print func(args.mask)
    return 0

from relaylib import RLY16

if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='Relay Control')

    parser.add_argument('-d','--device',default='/dev/ttyACM0',
                    	help='GPIO serial device (%(default)s)')

    parser.add_argument('-t','--timeout',default=1,type=int,
                    	help='%(default)ss')

    parser.add_argument('-v','--verbose',dest='verbose',action='store_true',
                    	help='Verbose debugging output')

    subparsers = parser.add_subparsers(dest='subparser_name')

    getstatus_parser = subparsers.add_parser('getStatus')
    getstatus_parser.set_defaults(func=handle_general)

    getstates_parser = subparsers.add_parser('getStates')
    getstates_parser.set_defaults(func=handle_general)

    setstates_parser = subparsers.add_parser('setStates')
    setstates_parser.add_argument('mask',metavar='MASK',
                    type=lambda x: int(x,0),
                    help='Bit mask'
                    )
    setstates_parser.set_defaults(func=handle_setStates)

    alloff_parser = subparsers.add_parser('allOff')
    alloff_parser.set_defaults(func=handle_general)
    
    allon_parser = subparsers.add_parser('allOn')
    allon_parser.set_defaults(func=handle_general)
    
    turnon_parser = subparsers.add_parser('turnOn')
    turnon_parser.add_argument('relay',metavar='RELAY',
                    choices=range(1,9),type=int,
                    help='1,2,3,4,5,6,7,8'
                    )
    turnon_parser.set_defaults(func=handle_relay)
 
    turnoff_parser = subparsers.add_parser('turnOff')
    turnoff_parser.add_argument('relay',metavar='RELAY',
                    choices=range(1,9),type=int,
                    help='1,2,3,4,5,6,7,8'
                    )
    turnoff_parser.set_defaults(func=handle_relay)

    args = parser.parse_args()

    opts = dict(device=args.device,timeout=args.timeout)

    with RLY16(**opts) as rly16:
        result = args.func(rly16,args)

    sys.exit(result)


